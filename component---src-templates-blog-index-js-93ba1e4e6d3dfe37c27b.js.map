{"version":3,"file":"component---src-templates-blog-index-js-93ba1e4e6d3dfe37c27b.js","mappings":"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","sources":["webpack://luiz-ipsum/./src/assets/images/default-img.png","webpack://luiz-ipsum/./src/components/SEO/index.js","webpack://luiz-ipsum/./src/components/shared/Bio/styled.js","webpack://luiz-ipsum/./src/components/shared/Bio/index.js","webpack://luiz-ipsum/./src/components/PostList/styled.js","webpack://luiz-ipsum/./src/components/PostList/PostItem/styled.js","webpack://luiz-ipsum/./src/components/PostList/PostItem/index.js","webpack://luiz-ipsum/./src/components/PostList/index.js","webpack://luiz-ipsum/./src/templates/blog-index.js","webpack://luiz-ipsum/./src/utils/helpers.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/default-img-cd6f95019bd815d8c44187ece42eb8c1.png\";","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, title, description, image, slug, lang }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const url = `${siteMetadata.siteUrl}${slug}`;\n  const siteDescription = description || siteMetadata.description;\n  const siteImage = image ? `${siteMetadata.siteUrl}${image}` : null;\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      {...(title\n        ? {\n          titleTemplate: `%s — ${siteMetadata.title}`,\n          title\n        }\n        : {\n          title: `${siteMetadata.title} — Home`\n        })}\n      meta={[\n        {\n          name: 'description',\n          content: siteDescription\n        },\n        {\n          property: 'og:url',\n          content: url\n        },\n        {\n          property: 'og:title',\n          content: title || siteMetadata.title\n        },\n        {\n          property: 'og:description',\n          content: siteDescription\n        },\n        {\n          property: 'og:type',\n          content: 'website'\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary'\n        },\n        {\n          name: 'twitter:title',\n          content: title || siteMetadata.title\n        },\n        {\n          name: 'twitter:description',\n          content: siteDescription\n        }\n      ]\n        .concat(\n          siteImage\n            ? [\n              {\n                property: 'og:image',\n                content: siteImage\n              },\n              {\n                name: 'twitter:image',\n                content: siteImage\n              }\n            ]\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  lang: 'pt-BR',\n  title: '',\n  slug: '',\n  image: null\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string,\n  lang: PropTypes.string\n};\n\nexport default SEO;\n","import styled from 'styled-components';\nimport media from 'styled-media-query';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nexport const Text = styled.p`\n  max-width: 14rem;\n  margin: 0;\n  padding: 0;\n  padding-left: 1rem;\n\n  white-space: pre-line;\n\n  a::before {\n    content: none !important;\n  }\n\n  ${media.greaterThan('375px')`\n    max-width: 16rem;\n  `}\n\n  ${media.greaterThan('medium')`\n    max-width: 25rem;\n  `}\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport * as S from './styled';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nfunction Bio() {\n  return (\n    <S.Row>\n      <StaticImage\n        alt=\"Imagem do autor do blog\"\n        src=\"../../../assets/images/photo.png\"\n        placeholder=\"blurred\"\n        layout=\"fixed\"\n        width={55}\n        height={55}\n        quality={100}\n        style={{ borderRadius: 50 }}\n      />\n      <S.Text>\n        Blog por <Link to=\"/about/\">Luiz Gustavo</Link>.{'\\n'}\n        Entusiasta de coisas que funcionam.\n      </S.Text>\n    </S.Row>\n  );\n}\n\nexport default Bio;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 3.5rem;\n  margin-bottom: 0.9rem;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.article`\n  width: 100%;\n  margin-top: 2rem;\n  padding: 1.7rem 2rem;\n\n  border: 1px solid rgba(var(--text), 0.2);\n  border-radius: 10px;\n  transition: border 0.1s ease-in;\n\n  svg {\n    margin-right: 0.5rem;\n    color: var(--secondary);\n  }\n\n  &:hover {\n    cursor: pointer;\n    border: 1px solid rgba(var(--text), 0.5);\n    transition: border 0.1s ease-in;\n  }\n\n  a {\n    display: block;\n  }\n`;\n\nexport const Tags = styled.span`\n  display: flex;\n  margin-bottom: 0;\n  margin-top: 1rem;\n  align-items: center;\n\n  font-size: 0.9rem;\n  color: rgb(var(--text));\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 1.5rem;\n  margin-top: 0;\n\n  color: var(--primary);\n`;\n\nexport const Description = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n\n  color: rgba(var(--text), 0.7);\n`;\n\nexport const Time = styled.time`\n  margin-bottom: .5rem;\n  margin-top: 0;\n`;\n","import React from 'react';\nimport { formatTimestamp } from '../../../utils/helpers';\nimport { MdLabel } from 'react-icons/md';\nimport { Anchor } from '../../shared/styled';\nimport PropTypes from 'prop-types';\nimport * as S from './styled';\n\nfunction PostItem({ date, readingTime, slug, tags, title, summary }) {\n  return (\n    <S.Container>\n      <Anchor to={slug} rel=\"bookmark\">\n        <React.Fragment>\n          <header>\n            <S.Time>{formatTimestamp(date, readingTime)}</S.Time>\n            <S.Title>{title}</S.Title>\n          </header>\n          <S.Description>{summary}</S.Description>\n          <S.Tags>\n            <MdLabel />\n            {tags}\n          </S.Tags>\n        </React.Fragment>\n      </Anchor>\n    </S.Container>\n  );\n}\n\nPostItem.propTypes = {\n  date: PropTypes.string.isRequired,\n  readingTime: PropTypes.number.isRequired,\n  slug: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired\n};\n\nexport default PostItem;\n","import React from 'react';\nimport * as S from './styled';\nimport PropTypes from 'prop-types';\nimport PostItem from './PostItem';\n\nfunction PostList({ posts }) {\n  return (\n    <S.Container>\n      {posts.map(({ node }) => (\n        <PostItem\n          key={node.fields.slug}\n          date={node.frontmatter.date}\n          readingTime={node.fields.readingTime.minutes}\n          slug={node.fields.slug}\n          tags={node.frontmatter.tags}\n          title={node.frontmatter.title}\n          summary={node.frontmatter.summary}\n        />\n      ))}\n    </S.Container>\n  );\n}\n\nPostList.propTypes = {\n  posts: PropTypes.array.isRequired\n};\n\nexport default PostList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Bio from '../components/shared/Bio';\nimport SEO from '../components/SEO';\nimport PostList from '../components/PostList';\nimport img from '../assets/images/default-img.png';\n\nfunction BlogIndexTemplate({ data, location }) {\n  return (\n    <Layout location={location}>\n      <SEO image={img} />\n      <aside>\n        <Bio />\n      </aside>\n      <main>\n        <PostList posts={data.allMarkdownRemark.edges} />\n      </main>\n    </Layout>\n  );\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            readingTime {\n              minutes\n            }\n          }\n          frontmatter {\n            date(locale: \"pt-br\", formatString: \"YYYY-MM-DD\")\n            title\n            summary\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","export function formatTimestamp(date, readTime) {\n  const options = { locale: 'pt-br', year: 'numeric', month: 'long', day: 'numeric' };\n  const dateString = (new Date(`${date}T00:00:00.000`).toLocaleDateString('pt-br', options));\n\n  return `${dateString} · Leitura de ${Math.ceil(readTime)} min`;\n}\n"],"names":["SEO","meta","title","description","image","slug","lang","siteMetadata","useStaticQuery","site","url","siteUrl","siteDescription","siteImage","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","Text","styled","media","Row","S","alt","src","placeholder","layout","width","height","quality","style","borderRadius","Link","to","Container","Tags","Title","Description","Time","date","readingTime","tags","summary","rel","formatTimestamp","posts","map","node","key","fields","frontmatter","minutes","data","location","Layout","img","Bio","allMarkdownRemark","edges","readTime","Date","toLocaleDateString","locale","year","month","day","Math","ceil"],"sourceRoot":""}