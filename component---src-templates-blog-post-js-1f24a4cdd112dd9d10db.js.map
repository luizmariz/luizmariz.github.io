{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/components/shared/Bio/styled.js","webpack:///./src/components/shared/Bio/index.js","webpack:///./src/assets/images/default-img.png","webpack:///./src/components/SEO/index.js","webpack:///./src/components/BlogPost/Footer/styled.js","webpack:///./src/components/BlogPost/Footer/index.js","webpack:///./src/components/BlogPost/SignUp/index.js","webpack:///./src/components/BlogPost/index.js","webpack:///./src/templates/blog-post.js"],"names":["formatTimestamp","date","readTime","Date","toLocaleDateString","locale","year","month","day","Math","ceil","Text","styled","p","media","greaterThan","Row","div","StyledImg","Img","Bio","avatar","useStaticQuery","alt","fixed","childImageSharp","style","display","to","module","exports","SEO","meta","title","description","image","slug","lang","siteMetadata","site","url","siteUrl","siteDescription","siteImage","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","PostNav","ul","Next","li","Previous","StyledLink","Link","BlogIndex","h3","Footer","previous","next","fields","rel","frontmatter","SignUp","margin","action","className","method","min-width","borderRadius","boxShadow","transition","data-style","data-element","backgroundColor","opacity","color","fontSize","fontWeight","lineHeight","role","aria-label","tabindex","src","maxWidth","data-group","placeholder","type","borderColor","required","href","target","BlogPost","location","readingTime","summary","html","tags","Layout","map","tag","dangerouslySetInnerHTML","__html","BlogPostTemplate","data","pageContext","markdownRemark","thumbnail","minutes","split","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-1f24a4cdd112dd9d10db.js","sourcesContent":["export function formatTimestamp(date, readTime) {\n  const options = { locale: 'pt-br', year: 'numeric', month: 'long', day: 'numeric' };\n  const dateString = (new Date(`${date}T00:00:00.000`).toLocaleDateString('pt-br', options));\n\n  return `${dateString} · Leitura de ${Math.ceil(readTime)} min`;\n}\n","import styled from 'styled-components';\nimport media from 'styled-media-query';\n\nimport Img from 'gatsby-image';\n\nexport const Text = styled.p`\n  max-width: 14rem;\n  margin: 0;\n  padding: 0;\n  padding-left: 1rem;\n\n  white-space: pre-line;\n\n  a::before {\n    content: none !important;\n  }\n\n  ${media.greaterThan(\"375px\")`\n    max-width: 16rem;\n  `}\n\n  ${media.greaterThan(\"medium\")`\n    max-width: 25rem;\n  `}\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const StyledImg = styled(Img)`\n  width: 55px;\n  height: 55px;\n\n  border-radius: 50%;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport * as S from './styled';\n\nfunction Bio() {\n  const { avatar } = useStaticQuery(\n    graphql`\n      query {\n        avatar: file(relativePath: { eq: \"photo.png\" }) {\n          childImageSharp {\n            fixed(width: 55, height: 55) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `\n  );\n\n  return (\n    <S.Row>\n      <S.StyledImg\n        alt=\"Imagem do autor do blog\"\n        fixed={avatar.childImageSharp.fixed}\n        style={{ display: 'inherit' }}\n      />\n      <S.Text>\n        Blog por <Link to=\"/about/\">Luiz Gustavo</Link>.{'\\n'}\n        Entusiasta de coisas que funcionam.\n      </S.Text>\n    </S.Row>\n  );\n}\n\nexport default Bio;\n","module.exports = __webpack_public_path__ + \"static/default-img-e6b9d370fe6263375a1124a3d86f26e2.png\";","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, title, description, image, slug, lang }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const url = `${siteMetadata.siteUrl}${slug}`;\n  const siteDescription = description || siteMetadata.description;\n  const siteImage = image ? `${siteMetadata.siteUrl}${image}` : null;\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      {...(title\n        ? {\n          titleTemplate: `%s — ${siteMetadata.title}`,\n          title\n        }\n        : {\n          title: `${siteMetadata.title} — Home`\n        })}\n      meta={[\n        {\n          name: 'description',\n          content: siteDescription\n        },\n        {\n          property: 'og:url',\n          content: url\n        },\n        {\n          property: 'og:title',\n          content: title || siteMetadata.title\n        },\n        {\n          property: 'og:description',\n          content: siteDescription\n        },\n        {\n          property: 'og:type',\n          content: 'website'\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary'\n        },\n        {\n          name: 'twitter:title',\n          content: title || siteMetadata.title\n        },\n        {\n          name: 'twitter:description',\n          content: siteDescription\n        }\n      ]\n        .concat(\n          siteImage\n            ? [\n              {\n                property: 'og:image',\n                content: siteImage\n              },\n              {\n                name: 'twitter:image',\n                content: siteImage\n              }\n            ]\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  lang: 'pt-BR',\n  title: '',\n  slug: '',\n  image: null\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string,\n  lang: PropTypes.string\n};\n\nexport default SEO;\n","import styled from 'styled-components';\nimport media from 'styled-media-query';\n\nimport { Link } from 'gatsby';\n\nexport const PostNav = styled.ul`\n  display: inline-block;\n  max-width: 100%;\n  margin-top: 4rem;\n  margin-bottom: 0;\n  padding: 0;\n\n  list-style-type: none;\n\n  svg {\n    font-size: 1.2rem;\n  }\n\n  ${media.greaterThan('medium')`\n    max-width: 80%;\n  `}\n`;\n\nexport const Next = styled.li`\n  display: inline;\n\n  svg {\n    margin-left: 1rem;\n  }\n`;\n\nexport const Previous = styled.li`\n  display: inline;\n  text-align: right;\n\n  svg {\n    margin-right: 1rem;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-top: 1.5rem;\n  line-height: 2.1rem;\n\n  svg {\n    margin-bottom: -0.2rem;\n  }\n\n  &::before {\n    content: none !important;\n  }\n`;\n\nexport const BlogIndex = styled.h3`\n  margin-block-start: 0;\n  margin-block-end: 0.5em;\n  align-self: flex-start;\n\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--primary);\n\n  text-transform: uppercase;\n`;\n","import React from 'react';\nimport { MdArrowBack, MdArrowForward } from 'react-icons/md';\nimport { Anchor } from '../../shared/styled';\nimport Bio from '../../shared/Bio';\nimport PropTypes from 'prop-types';\nimport * as S from './styled';\n\nfunction Footer({ previous, next }) {\n  return (\n    <aside>\n      <nav>\n        <S.BlogIndex>\n          <Anchor to=\"/\">luiz ipsum</Anchor>\n        </S.BlogIndex>\n        <Bio />\n        <S.PostNav>\n          {previous && (\n            <S.Previous>\n              <S.StyledLink to={previous.fields.slug} rel=\"prev\">\n                <MdArrowBack />\n                {previous.frontmatter.title}\n              </S.StyledLink>\n            </S.Previous>\n          )}\n          {next && (\n            <S.Next>\n              <S.StyledLink to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title}\n                <MdArrowForward />\n              </S.StyledLink>\n            </S.Next>\n          )}\n        </S.PostNav>\n      </nav>\n    </aside>\n  );\n}\n\nFooter.propTypes = {\n  previous: PropTypes.any,\n  next: PropTypes.any\n};\n\nexport default Footer;\n","import React from 'react';\nimport './style.css';\n\nfunction SignUp() {\n  return (\n    <div style={{ margin: '4rem 0px 2rem' }}>\n      <form\n        action=\"https://app.convertkit.com/forms/1565471/subscriptions\"\n        className=\"seva-form formkit-form\"\n        method=\"post\"\n        min-width=\"400 500 600 700 800\"\n        style={{\n          borderRadius: 6,\n          boxShadow: 'var(--form-shadow)',\n          transition: 'all 0.25s ease-out'\n        }}\n      >\n        <div data-style=\"full\">\n          <div\n            data-element=\"column\"\n            className=\"formkit-column\"\n            style={{\n              backgroundColor: 'var(--footer)'\n            }}\n          >\n            <div className=\"formkit-background\" style={{ opacity: 0.3 }}></div>\n            <div className=\"formkit-header\" data-element=\"header\">\n              <h1\n                style={{\n                  color: 'rgb(var(--text))',\n                  fontSize: '1.25rem',\n                  fontWeight: 700,\n                  lineHeight: '1.60rem'\n                }}\n              >\n                Inscreva-se na Newsletter\n              </h1>\n            </div>\n            <div\n              className=\"formkit-subheader\"\n              data-element=\"subheader\"\n              style={{ color: 'rgb(var(--text))', fontSize: '.9rem' }}\n            >\n              <p>\n                Eu demoro para postar rs. Então relaxa que não vou spammar{' '}\n                <span role=\"img\" aria-label=\"winking face\">\n                  😉\n                </span>\n              </p>\n            </div>\n            <div\n              className=\"formkit-image formkit-image relative\"\n              role=\"button\"\n              tabindex=\"0\"\n            >\n              <img\n                src=\"https://embed.filekitcdn.com/e/jMvBwhj2iEdMTP9VKCSRyd/u2hVkSa4YDGLhsGwKT9Edb\"\n                alt=\"\"\n                style={{ maxWidth: '60%' }}\n              />\n            </div>\n          </div>\n          <div data-element=\"column\" className=\"formkit-column\">\n            <ul\n              className=\"formkit-alert formkit-alert-error\"\n              data-element=\"errors\"\n              data-group=\"alert\"\n            ></ul>\n            <div data-element=\"fields\" className=\"seva-fields formkit-fields\">\n              <div className=\"formkit-field\">\n                <input\n                  className=\"formkit-input\"\n                  aria-label=\"Primeiro Nome\"\n                  name=\"fields[first_name]\"\n                  placeholder=\"Primeiro Nome\"\n                  type=\"text\"\n                  style={{\n                    color: 'rgb(0, 0, 0)',\n                    borderColor: 'rgb(227, 227, 227)',\n                    borderRadius: 4,\n                    fontWeight: 400\n                  }}\n                />\n              </div>\n              <div className=\"formkit-field\">\n                <input\n                  className=\"formkit-input\"\n                  name=\"email_address\"\n                  placeholder=\"Email\"\n                  required=\"\"\n                  type=\"email\"\n                  style={{\n                    color: 'rgb(0, 0, 0)',\n                    borderColor: 'rgb(227, 227, 227)',\n                    borderRadius: 4,\n                    fontWeight: 400\n                  }}\n                />\n              </div>\n              <button\n                data-element=\"submit\"\n                className=\"formkit-submit formkit-submit\"\n                style={{\n                  color: 'rgb(255, 255, 255)',\n                  backgroundColor: 'rgb(75, 51, 76)',\n                  borderRadius: 24,\n                  fontWeight: 700\n                }}\n              >\n                <div className=\"formkit-spinner\">\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                </div>\n                <span>Inscreva-se</span>\n              </button>\n            </div>\n            <div\n              className=\"formkit-guarantee\"\n              data-element=\"guarantee\"\n              style={{\n                color: 'var(--text)',\n                fontSize: 13,\n                fontWeight: 400\n              }}\n            >\n              <p>Desinscreva-se quando quiser.</p>\n            </div>\n            <a\n              href=\"https://convertkit.com?utm_source=dynamic&amp;utm_medium=referral&amp;utm_campaign=poweredby&amp;utm_content=form\"\n              className=\"formkit-powered-by\"\n              data-element=\"powered-by\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Powered By ConvertKit\n            </a>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUp;\n","import React from 'react';\nimport { formatTimestamp } from '../../utils/helpers';\nimport PropTypes from 'prop-types';\nimport SEO from '../SEO';\nimport Layout from '../Layout';\nimport Footer from './Footer';\nimport SignUp from './SignUp';\n\nfunction BlogPost({\n  location,\n  slug,\n  title,\n  date,\n  readingTime,\n  summary,\n  html,\n  previous,\n  next,\n  image,\n  tags\n}) {\n  return (\n    <Layout location={location}>\n      <SEO\n        title={title}\n        description={summary}\n        slug={slug}\n        image={image}\n        meta={[\n          {\n            property: 'article:published_time',\n            content: date\n          },\n          ...tags.map(tag => ({\n            property: 'article:tag',\n            content: tag\n          }))\n        ]}\n      />\n      <main>\n        <article>\n          <header>\n            <h1>{title}</h1>\n            <time>{formatTimestamp(date, readingTime)}</time>\n          </header>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n      </main>\n      <SignUp />\n      <Footer previous={previous} next={next} />\n    </Layout>\n  );\n}\n\nBlogPost.propTypes = {\n  location: PropTypes.object.isRequired,\n  slug: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  readingTime: PropTypes.number.isRequired,\n  summary: PropTypes.string.isRequired,\n  html: PropTypes.string.isRequired,\n  previous: PropTypes.any,\n  next: PropTypes.any,\n  image: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default BlogPost;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport BlogPost from '../components/BlogPost';\nimport thumbnail from '../assets/images/default-img.png';\n\nfunction BlogPostTemplate({ data, pageContext, location }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  const { previous, next, slug } = pageContext;\n\n  return (\n    <BlogPost\n      location={location}\n      title={frontmatter.title}\n      summary={frontmatter.summary}\n      image={thumbnail}\n      date={frontmatter.date}\n      readingTime={markdownRemark.fields.readingTime.minutes}\n      slug={slug}\n      html={html}\n      previous={previous}\n      next={next}\n      tags={frontmatter.tags.split(',')}\n    />\n  );\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(locale: \"pt-br\", formatString: \"YYYY-MM-DD\")\n        title\n        summary\n        tags\n      }\n      fields {\n        readingTime {\n          minutes\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}