{"version":3,"sources":["webpack:///./src/components/PostList/styled.js","webpack:///./src/components/PostList/PostItem/styled.js","webpack:///./src/components/PostList/PostItem/index.js","webpack:///./src/components/PostList/index.js","webpack:///./src/templates/blog-index.js"],"names":["Container","styled","div","article","Tags","span","Title","h2","Description","p","Time","time","PostItem","date","readingTime","slug","tags","title","summary","to","rel","Fragment","formatTimestamp","PostList","posts","map","node","key","fields","frontmatter","minutes","BlogIndexTemplate","data","location","Layout","SEO","image","img","Bio","allMarkdownRemark","edges","pageQuery"],"mappings":"2KAEaA,EAAYC,IAAOC,IAAV,oEAAGD,CAAH,6C,oCCATD,EAAYC,IAAOE,QAAV,wEAAGF,CAAH,6SAwBTG,EAAOH,IAAOI,KAAV,mEAAGJ,CAAH,8GASJK,EAAQL,IAAOM,GAAV,oEAAGN,CAAH,6DAMLO,EAAcP,IAAOQ,EAAV,0EAAGR,CAAH,+DAMXS,EAAOT,IAAOU,KAAV,mEAAGV,CAAH,uCCXFW,MA7Bf,YAAsE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACxD,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQC,GAAIJ,EAAMK,IAAI,YACpB,kBAAC,IAAMC,SAAP,KACE,gCACE,kBAAC,EAAD,KAASC,YAAgBT,EAAMC,IAC/B,kBAAC,EAAD,KAAUG,IAEZ,kBAAC,EAAD,KAAgBC,GAChB,kBAAC,EAAD,KACE,kBAAC,IAAD,MACCF,OCQEO,MAtBf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,kBAAC,EAAD,KACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,EAAD,CACEC,IAAKD,EAAKE,OAAOb,KACjBF,KAAMa,EAAKG,YAAYhB,KACvBC,YAAaY,EAAKE,OAAOd,YAAYgB,QACrCf,KAAMW,EAAKE,OAAOb,KAClBC,KAAMU,EAAKG,YAAYb,KACvBC,MAAOS,EAAKG,YAAYZ,MACxBC,QAASQ,EAAKG,YAAYX,e,qBChBpC,0CAsBea,UAdf,YAAgD,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACjC,OACE,kBAACC,EAAA,EAAD,CAAQD,SAAUA,GAChB,kBAACE,EAAA,EAAD,CAAKC,MAAOC,MACZ,+BACE,kBAACC,EAAA,EAAD,OAEF,8BACE,kBAAC,EAAD,CAAUd,MAAOQ,EAAKO,kBAAkBC,WAMjCT,IAEFU,EAAS","file":"component---src-templates-blog-index-js-082da809e3cf43cfe80b.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 3.5rem;\r\n  margin-bottom: 0.9rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.article`\r\n  margin-top: 2rem;\r\n  width: 100%;\r\n  border: 1px solid rgba(var(--text), 0.2);\r\n  border-radius: 10px;\r\n  padding: 1.7rem 2rem;\r\n  transition: border 0.1s ease-in;\r\n\r\n  svg {\r\n    color: var(--secondary);\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  &:hover {\r\n    border: 1px solid rgba(var(--text), 0.5);\r\n    transition: border 0.1s ease-in;\r\n    cursor: pointer;\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Tags = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0;\r\n  margin-top: 1rem;\r\n  font-size: 0.9rem;\r\n  color: rgb(var(--text));\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: 1.5rem;\r\n  margin-top: 0;\r\n  color: var(--primary);\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  color: rgba(var(--text), 0.7);\r\n`;\r\n\r\nexport const Time = styled.time`\r\n  margin-bottom: .5rem;\r\n  margin-top: 0;\r\n`;\r\n","import React from 'react';\r\nimport { formatTimestamp } from '../../../utils/helpers';\r\nimport { MdLabel } from 'react-icons/md';\r\nimport { Anchor } from '../../shared/styled';\r\nimport PropTypes from 'prop-types';\r\nimport * as S from './styled';\r\n\r\nfunction PostItem({ date, readingTime, slug, tags, title, summary }) {\r\n  return (\r\n    <S.Container>\r\n      <Anchor to={slug} rel=\"bookmark\">\r\n        <React.Fragment>\r\n          <header>\r\n            <S.Time>{formatTimestamp(date, readingTime)}</S.Time>\r\n            <S.Title>{title}</S.Title>\r\n          </header>\r\n          <S.Description>{summary}</S.Description>\r\n          <S.Tags>\r\n            <MdLabel />\r\n            {tags}\r\n          </S.Tags>\r\n        </React.Fragment>\r\n      </Anchor>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nPostItem.propTypes = {\r\n  date: PropTypes.string.isRequired,\r\n  readingTime: PropTypes.number.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PostItem;\r\n","import React from 'react';\r\nimport * as S from './styled';\r\nimport PropTypes from 'prop-types';\r\nimport PostItem from './PostItem';\r\n\r\nfunction PostList({ posts }) {\r\n  return (\r\n    <S.Container>\r\n      {posts.map(({ node }) => (\r\n        <PostItem\r\n          key={node.fields.slug}\r\n          date={node.frontmatter.date}\r\n          readingTime={node.fields.readingTime.minutes}\r\n          slug={node.fields.slug}\r\n          tags={node.frontmatter.tags}\r\n          title={node.frontmatter.title}\r\n          summary={node.frontmatter.summary}\r\n        />\r\n      ))}\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nPostList.propTypes = {\r\n  posts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default PostList;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/Layout';\r\nimport Bio from '../components/shared/Bio';\r\nimport SEO from '../components/SEO';\r\nimport PostList from '../components/PostList';\r\nimport img from '../assets/images/default-img.png';\r\n\r\nfunction BlogIndexTemplate({ data, location }) {\r\n  return (\r\n    <Layout location={location}>\r\n      <SEO image={img} />\r\n      <aside>\r\n        <Bio />\r\n      </aside>\r\n      <main>\r\n        <PostList posts={data.allMarkdownRemark.edges} />\r\n      </main>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default BlogIndexTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            readingTime {\r\n              minutes\r\n            }\r\n          }\r\n          frontmatter {\r\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\r\n            title\r\n            summary\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}