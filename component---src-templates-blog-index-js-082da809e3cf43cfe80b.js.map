{"version":3,"sources":["webpack:///./src/components/PostList/styled.js","webpack:///./src/components/PostList/PostItem/styled.js","webpack:///./src/components/PostList/PostItem/index.js","webpack:///./src/components/PostList/index.js","webpack:///./src/templates/blog-index.js"],"names":["Container","styled","div","article","Tags","span","Title","h2","Description","p","Time","time","PostItem","date","readingTime","slug","tags","title","summary","to","rel","Fragment","formatTimestamp","PostList","posts","map","node","key","fields","frontmatter","minutes","BlogIndexTemplate","data","location","Layout","SEO","image","img","Bio","allMarkdownRemark","edges","pageQuery"],"mappings":"2KAEaA,EAAYC,IAAOC,IAAV,oEAAGD,CAAH,6C,oCCATD,EAAYC,IAAOE,QAAV,wEAAGF,CAAH,6SAwBTG,EAAOH,IAAOI,KAAV,mEAAGJ,CAAH,8GASJK,EAAQL,IAAOM,GAAV,oEAAGN,CAAH,6DAMLO,EAAcP,IAAOQ,EAAV,0EAAGR,CAAH,+DAMXS,EAAOT,IAAOU,KAAV,mEAAGV,CAAH,uCCXFW,MA7Bf,YAAsE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACxD,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQC,GAAIJ,EAAMK,IAAI,YACpB,kBAAC,IAAMC,SAAP,KACE,gCACE,kBAAC,EAAD,KAASC,YAAgBT,EAAMC,IAC/B,kBAAC,EAAD,KAAUG,IAEZ,kBAAC,EAAD,KAAgBC,GAChB,kBAAC,EAAD,KACE,kBAAC,IAAD,MACCF,OCQEO,MAtBf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,kBAAC,EAAD,KACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,EAAD,CACEC,IAAKD,EAAKE,OAAOb,KACjBF,KAAMa,EAAKG,YAAYhB,KACvBC,YAAaY,EAAKE,OAAOd,YAAYgB,QACrCf,KAAMW,EAAKE,OAAOb,KAClBC,KAAMU,EAAKG,YAAYb,KACvBC,MAAOS,EAAKG,YAAYZ,MACxBC,QAASQ,EAAKG,YAAYX,e,qBChBpC,0CAsBea,UAdf,YAAgD,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACjC,OACE,kBAACC,EAAA,EAAD,CAAQD,SAAUA,GAChB,kBAACE,EAAA,EAAD,CAAKC,MAAOC,MACZ,+BACE,kBAACC,EAAA,EAAD,OAEF,8BACE,kBAAC,EAAD,CAAUd,MAAOQ,EAAKO,kBAAkBC,WAMjCT,IAEFU,EAAS","file":"component---src-templates-blog-index-js-082da809e3cf43cfe80b.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 3.5rem;\n  margin-bottom: 0.9rem;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.article`\n  margin-top: 2rem;\n  width: 100%;\n  border: 1px solid rgba(var(--text), 0.2);\n  border-radius: 10px;\n  padding: 1.7rem 2rem;\n  transition: border 0.1s ease-in;\n\n  svg {\n    color: var(--secondary);\n    margin-right: 0.5rem;\n  }\n\n  &:hover {\n    border: 1px solid rgba(var(--text), 0.5);\n    transition: border 0.1s ease-in;\n    cursor: pointer;\n  }\n\n  a {\n    display: block;\n  }\n`;\n\nexport const Tags = styled.span`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0;\n  margin-top: 1rem;\n  font-size: 0.9rem;\n  color: rgb(var(--text));\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 1.5rem;\n  margin-top: 0;\n  color: var(--primary);\n`;\n\nexport const Description = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  color: rgba(var(--text), 0.7);\n`;\n\nexport const Time = styled.time`\n  margin-bottom: .5rem;\n  margin-top: 0;\n`;\n","import React from 'react';\nimport { formatTimestamp } from '../../../utils/helpers';\nimport { MdLabel } from 'react-icons/md';\nimport { Anchor } from '../../shared/styled';\nimport PropTypes from 'prop-types';\nimport * as S from './styled';\n\nfunction PostItem({ date, readingTime, slug, tags, title, summary }) {\n  return (\n    <S.Container>\n      <Anchor to={slug} rel=\"bookmark\">\n        <React.Fragment>\n          <header>\n            <S.Time>{formatTimestamp(date, readingTime)}</S.Time>\n            <S.Title>{title}</S.Title>\n          </header>\n          <S.Description>{summary}</S.Description>\n          <S.Tags>\n            <MdLabel />\n            {tags}\n          </S.Tags>\n        </React.Fragment>\n      </Anchor>\n    </S.Container>\n  );\n}\n\nPostItem.propTypes = {\n  date: PropTypes.string.isRequired,\n  readingTime: PropTypes.number.isRequired,\n  slug: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired\n};\n\nexport default PostItem;\n","import React from 'react';\nimport * as S from './styled';\nimport PropTypes from 'prop-types';\nimport PostItem from './PostItem';\n\nfunction PostList({ posts }) {\n  return (\n    <S.Container>\n      {posts.map(({ node }) => (\n        <PostItem\n          key={node.fields.slug}\n          date={node.frontmatter.date}\n          readingTime={node.fields.readingTime.minutes}\n          slug={node.fields.slug}\n          tags={node.frontmatter.tags}\n          title={node.frontmatter.title}\n          summary={node.frontmatter.summary}\n        />\n      ))}\n    </S.Container>\n  );\n}\n\nPostList.propTypes = {\n  posts: PropTypes.array.isRequired\n};\n\nexport default PostList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Bio from '../components/shared/Bio';\nimport SEO from '../components/SEO';\nimport PostList from '../components/PostList';\nimport img from '../assets/images/default-img.png';\n\nfunction BlogIndexTemplate({ data, location }) {\n  return (\n    <Layout location={location}>\n      <SEO image={img} />\n      <aside>\n        <Bio />\n      </aside>\n      <main>\n        <PostList posts={data.allMarkdownRemark.edges} />\n      </main>\n    </Layout>\n  );\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            readingTime {\n              minutes\n            }\n          }\n          frontmatter {\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\n            title\n            summary\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}