{"version":3,"sources":["webpack:///./src/components/BlogPost/Footer/styled.js","webpack:///./src/components/BlogPost/Footer/index.js","webpack:///./src/components/BlogPost/index.js","webpack:///./src/templates/blog-post.js"],"names":["PostNav","styled","ul","Next","li","Previous","StyledLink","Link","BlogIndex","h3","Footer","previous","next","to","Bio","fields","slug","rel","frontmatter","title","BlogPost","location","date","readingTime","summary","html","image","Layout","SEO","description","formatTimestamp","dangerouslySetInnerHTML","__html","BlogPostTemplate","data","pageContext","markdownRemark","thumbnail","minutes","pageQuery"],"mappings":"2NAGaA,EAAUC,IAAOC,GAAV,sEAAGD,CAAH,uKAiBPE,EAAOF,IAAOG,GAAV,mEAAGH,CAAH,2CAQJI,EAAWJ,IAAOG,GAAV,uEAAGH,CAAH,6DASRK,EAAaL,YAAOM,QAAV,yEAAGN,CAAH,wGAaVO,EAAYP,IAAOQ,GAAV,wEAAGR,CAAH,yJCPPS,MApCf,YAAqC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAC1B,OACE,+BACE,6BACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQC,GAAG,KAAX,eAEF,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,KACGH,GACC,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcE,GAAIF,EAASI,OAAOC,KAAMC,IAAI,QAC1C,kBAAC,IAAD,MACCN,EAASO,YAAYC,QAI3BP,GACC,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcC,GAAID,EAAKG,OAAOC,KAAMC,IAAI,QACrCL,EAAKM,YAAYC,MAClB,kBAAC,IAAD,YC0BDC,MA/Cf,YAWI,IAVFC,EAUC,EAVDA,SACAL,EASC,EATDA,KACAG,EAQC,EARDA,MACAG,EAOC,EAPDA,KACAC,EAMC,EANDA,YACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,KACAd,EAGC,EAHDA,SACAC,EAEC,EAFDA,KACAc,EACC,EADDA,MAEA,OACE,kBAACC,EAAA,EAAD,CAAQN,SAAUA,GAChB,kBAACO,EAAA,EAAD,CACET,MAAOA,EACPU,YAAaL,EACbR,KAAMA,EACNU,MAAOA,IAET,8BACE,iCACE,gCACE,4BAAKP,GACL,8BAAOW,YAAgBR,EAAMC,KAE/B,yBAAKQ,wBAAyB,CAAEC,OAAQP,OAG5C,kBAAC,EAAD,CAAQd,SAAUA,EAAUC,KAAMA,M,qBCpCxC,0CA0BeqB,UArBf,YAA4D,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAad,EAAY,EAAZA,SACrCe,EAAmBF,EAAnBE,eACAlB,EAAsBkB,EAAtBlB,YAAaO,EAASW,EAATX,KACbd,EAAyBwB,EAAzBxB,SAAUC,EAAeuB,EAAfvB,KAAMI,EAASmB,EAATnB,KAExB,OACE,kBAAC,EAAD,CACEK,SAAUA,EACVF,MAAOD,EAAYC,MACnBK,QAASN,EAAYM,QACrBE,MAAOW,IACPf,KAAMJ,EAAYI,KAClBC,YAAaa,EAAerB,OAAOQ,YAAYe,QAC/CtB,KAAMA,EACNS,KAAMA,EACNd,SAAUA,EACVC,KAAMA,KAKGqB,IAEFM,EAAS","file":"component---src-templates-blog-post-js-1fd32f7baaa6f4175334.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nexport const PostNav = styled.ul`\n  display: inline-block;\n  padding: 0;\n  margin-top: 4rem;\n  margin-bottom: 0;\n  list-style-type: none;\n  max-width: 80%;\n\n  svg {\n    font-size: 1.2rem;\n  }\n\n  @media (max-width: 770px) {\n    max-width: 100%;\n  }\n`;\n\nexport const Next = styled.li`\n  display: inline;\n\n  svg {\n    margin-left: 1rem;\n  }\n`;\n\nexport const Previous = styled.li`\n  text-align: right;\n  display: inline;\n\n  svg {\n    margin-right: 1rem;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-top: 1.5rem;\n  line-height: 2.1rem;\n\n  svg {\n    margin-bottom: -.2rem;\n  }\n\n  &::before {\n    content: none !important;\n  }\n`;\n\nexport const BlogIndex = styled.h3`\n  text-transform: uppercase;\n  margin-block-start: 2em;\n  margin-block-end: 0.5em;\n  font-size: 1.5rem;\n  color: var(--primary);\n  font-weight: 600;\n  align-self: flex-start;\n`;\n","import React from 'react';\nimport { MdArrowBack, MdArrowForward } from 'react-icons/md';\nimport { Anchor } from '../../shared/styled';\nimport Bio from '../../shared/Bio';\nimport PropTypes from 'prop-types';\nimport * as S from './styled';\n\nfunction Footer({ previous, next }) {\n  return (\n    <aside>\n      <nav>\n        <S.BlogIndex>\n          <Anchor to=\"/\">luiz ipsum</Anchor>\n        </S.BlogIndex>\n        <Bio />\n        <S.PostNav>\n          {previous && (\n            <S.Previous>\n              <S.StyledLink to={previous.fields.slug} rel=\"prev\">\n                <MdArrowBack />\n                {previous.frontmatter.title}\n              </S.StyledLink>\n            </S.Previous>\n          )}\n          {next && (\n            <S.Next>\n              <S.StyledLink to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title}\n                <MdArrowForward />\n              </S.StyledLink>\n            </S.Next>\n          )}\n        </S.PostNav>\n      </nav>\n    </aside>\n  );\n}\n\nFooter.propTypes = {\n  previous: PropTypes.any,\n  next: PropTypes.any\n};\n\nexport default Footer;\n","import React from 'react';\nimport { formatTimestamp } from '../../utils/helpers';\nimport PropTypes from 'prop-types';\nimport SEO from '../SEO';\nimport Layout from '../Layout';\nimport Footer from './Footer';\n\nfunction BlogPost({\n  location,\n  slug,\n  title,\n  date,\n  readingTime,\n  summary,\n  html,\n  previous,\n  next,\n  image\n}) {\n  return (\n    <Layout location={location}>\n      <SEO\n        title={title}\n        description={summary}\n        slug={slug}\n        image={image}\n      />\n      <main>\n        <article>\n          <header>\n            <h1>{title}</h1>\n            <time>{formatTimestamp(date, readingTime)}</time>\n          </header>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n      </main>\n      <Footer previous={previous} next={next} />\n    </Layout>\n  );\n}\n\nBlogPost.propTypes = {\n  location: PropTypes.object.isRequired,\n  slug: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  readingTime: PropTypes.number.isRequired,\n  summary: PropTypes.string.isRequired,\n  html: PropTypes.string.isRequired,\n  previous: PropTypes.any,\n  next: PropTypes.any,\n  image: PropTypes.string\n};\n\nexport default BlogPost;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport BlogPost from '../components/BlogPost';\nimport thumbnail from '../assets/images/default-img.png';\n\nfunction BlogPostTemplate({ data, pageContext, location }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  const { previous, next, slug } = pageContext;\n\n  return (\n    <BlogPost\n      location={location}\n      title={frontmatter.title}\n      summary={frontmatter.summary}\n      image={thumbnail}\n      date={frontmatter.date}\n      readingTime={markdownRemark.fields.readingTime.minutes}\n      slug={slug}\n      html={html}\n      previous={previous}\n      next={next}\n    />\n  );\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\n        title\n        summary\n        tags\n      }\n      fields {\n        readingTime {\n          minutes\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}