{"version":3,"sources":["webpack:///./src/components/BlogPost/Footer/styled.js","webpack:///./src/components/BlogPost/Footer/index.js","webpack:///./src/components/BlogPost/index.js","webpack:///./src/templates/blog-post.js"],"names":["PostNav","styled","ul","Next","li","Previous","StyledLink","Link","BlogIndex","h3","Footer","previous","next","to","Bio","fields","slug","rel","frontmatter","title","BlogPost","location","date","readingTime","summary","html","image","Layout","SEO","description","formatTimestamp","dangerouslySetInnerHTML","__html","BlogPostTemplate","data","pageContext","markdownRemark","thumbnail","minutes","pageQuery"],"mappings":"2NAGaA,EAAUC,IAAOC,GAAV,sEAAGD,CAAH,uKAiBPE,EAAOF,IAAOG,GAAV,mEAAGH,CAAH,2CAQJI,EAAWJ,IAAOG,GAAV,uEAAGH,CAAH,6DASRK,EAAaL,YAAOM,QAAV,yEAAGN,CAAH,wGAaVO,EAAYP,IAAOQ,GAAV,wEAAGR,CAAH,yJCPPS,MApCf,YAAqC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAC1B,OACE,+BACE,6BACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQC,GAAG,KAAX,eAEF,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,KACGH,GACC,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcE,GAAIF,EAASI,OAAOC,KAAMC,IAAI,QAC1C,kBAAC,IAAD,MACCN,EAASO,YAAYC,QAI3BP,GACC,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcC,GAAID,EAAKG,OAAOC,KAAMC,IAAI,QACrCL,EAAKM,YAAYC,MAClB,kBAAC,IAAD,YC0BDC,MA/Cf,YAWI,IAVFC,EAUC,EAVDA,SACAL,EASC,EATDA,KACAG,EAQC,EARDA,MACAG,EAOC,EAPDA,KACAC,EAMC,EANDA,YACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,KACAd,EAGC,EAHDA,SACAC,EAEC,EAFDA,KACAc,EACC,EADDA,MAEA,OACE,kBAACC,EAAA,EAAD,CAAQN,SAAUA,GAChB,kBAACO,EAAA,EAAD,CACET,MAAOA,EACPU,YAAaL,EACbR,KAAMA,EACNU,MAAOA,IAET,8BACE,iCACE,gCACE,4BAAKP,GACL,8BAAOW,YAAgBR,EAAMC,KAE/B,yBAAKQ,wBAAyB,CAAEC,OAAQP,OAG5C,kBAAC,EAAD,CAAQd,SAAUA,EAAUC,KAAMA,M,qBCpCxC,0CA0BeqB,UArBf,YAA4D,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAad,EAAY,EAAZA,SACrCe,EAAmBF,EAAnBE,eACAlB,EAAsBkB,EAAtBlB,YAAaO,EAASW,EAATX,KACbd,EAAyBwB,EAAzBxB,SAAUC,EAAeuB,EAAfvB,KAAMI,EAASmB,EAATnB,KAExB,OACE,kBAAC,EAAD,CACEK,SAAUA,EACVF,MAAOD,EAAYC,MACnBK,QAASN,EAAYM,QACrBE,MAAOW,IACPf,KAAMJ,EAAYI,KAClBC,YAAaa,EAAerB,OAAOQ,YAAYe,QAC/CtB,KAAMA,EACNS,KAAMA,EACNd,SAAUA,EACVC,KAAMA,KAKGqB,IAEFM,EAAS","file":"component---src-templates-blog-post-js-1fd32f7baaa6f4175334.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\n\r\nexport const PostNav = styled.ul`\r\n  display: inline-block;\r\n  padding: 0;\r\n  margin-top: 4rem;\r\n  margin-bottom: 0;\r\n  list-style-type: none;\r\n  max-width: 80%;\r\n\r\n  svg {\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  @media (max-width: 770px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Next = styled.li`\r\n  display: inline;\r\n\r\n  svg {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Previous = styled.li`\r\n  text-align: right;\r\n  display: inline;\r\n\r\n  svg {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  margin-top: 1.5rem;\r\n  line-height: 2.1rem;\r\n\r\n  svg {\r\n    margin-bottom: -.2rem;\r\n  }\r\n\r\n  &::before {\r\n    content: none !important;\r\n  }\r\n`;\r\n\r\nexport const BlogIndex = styled.h3`\r\n  text-transform: uppercase;\r\n  margin-block-start: 2em;\r\n  margin-block-end: 0.5em;\r\n  font-size: 1.5rem;\r\n  color: var(--primary);\r\n  font-weight: 600;\r\n  align-self: flex-start;\r\n`;\r\n","import React from 'react';\r\nimport { MdArrowBack, MdArrowForward } from 'react-icons/md';\r\nimport { Anchor } from '../../shared/styled';\r\nimport Bio from '../../shared/Bio';\r\nimport PropTypes from 'prop-types';\r\nimport * as S from './styled';\r\n\r\nfunction Footer({ previous, next }) {\r\n  return (\r\n    <aside>\r\n      <nav>\r\n        <S.BlogIndex>\r\n          <Anchor to=\"/\">luiz ipsum</Anchor>\r\n        </S.BlogIndex>\r\n        <Bio />\r\n        <S.PostNav>\r\n          {previous && (\r\n            <S.Previous>\r\n              <S.StyledLink to={previous.fields.slug} rel=\"prev\">\r\n                <MdArrowBack />\r\n                {previous.frontmatter.title}\r\n              </S.StyledLink>\r\n            </S.Previous>\r\n          )}\r\n          {next && (\r\n            <S.Next>\r\n              <S.StyledLink to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title}\r\n                <MdArrowForward />\r\n              </S.StyledLink>\r\n            </S.Next>\r\n          )}\r\n        </S.PostNav>\r\n      </nav>\r\n    </aside>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {\r\n  previous: PropTypes.any,\r\n  next: PropTypes.any\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { formatTimestamp } from '../../utils/helpers';\r\nimport PropTypes from 'prop-types';\r\nimport SEO from '../SEO';\r\nimport Layout from '../Layout';\r\nimport Footer from './Footer';\r\n\r\nfunction BlogPost({\r\n  location,\r\n  slug,\r\n  title,\r\n  date,\r\n  readingTime,\r\n  summary,\r\n  html,\r\n  previous,\r\n  next,\r\n  image\r\n}) {\r\n  return (\r\n    <Layout location={location}>\r\n      <SEO\r\n        title={title}\r\n        description={summary}\r\n        slug={slug}\r\n        image={image}\r\n      />\r\n      <main>\r\n        <article>\r\n          <header>\r\n            <h1>{title}</h1>\r\n            <time>{formatTimestamp(date, readingTime)}</time>\r\n          </header>\r\n          <div dangerouslySetInnerHTML={{ __html: html }} />\r\n        </article>\r\n      </main>\r\n      <Footer previous={previous} next={next} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nBlogPost.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  readingTime: PropTypes.number.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  html: PropTypes.string.isRequired,\r\n  previous: PropTypes.any,\r\n  next: PropTypes.any,\r\n  image: PropTypes.string\r\n};\r\n\r\nexport default BlogPost;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport BlogPost from '../components/BlogPost';\r\nimport thumbnail from '../assets/images/default-img.png';\r\n\r\nfunction BlogPostTemplate({ data, pageContext, location }) {\r\n  const { markdownRemark } = data;\r\n  const { frontmatter, html } = markdownRemark;\r\n  const { previous, next, slug } = pageContext;\r\n\r\n  return (\r\n    <BlogPost\r\n      location={location}\r\n      title={frontmatter.title}\r\n      summary={frontmatter.summary}\r\n      image={thumbnail}\r\n      date={frontmatter.date}\r\n      readingTime={markdownRemark.fields.readingTime.minutes}\r\n      slug={slug}\r\n      html={html}\r\n      previous={previous}\r\n      next={next}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\r\n        title\r\n        summary\r\n        tags\r\n      }\r\n      fields {\r\n        readingTime {\r\n          minutes\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}